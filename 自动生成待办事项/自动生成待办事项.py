import tkinter as tkfrom tkinter import messageboximport openpyxlimport pandas as pd# 读取Excel文件def read_xlsx(file_path):    wb = openpyxl.load_workbook(file_path)    sheet = wb.active    items = []    for row in sheet.iter_rows(min_row=2, values_only=True):  # 假设第一行是标题        items.append(row[0])    return items# 创建GUI窗口def create_gui(items):    root = tk.Tk()    root.title("待办事项选择器")    # 设置窗口的初始大小    width = 200  # 窗口宽度    height = 700  # 窗口高度    root.geometry(f'{width}x{height}')    screen_width = root.winfo_screenwidth()    screen_height = root.winfo_screenheight()    # 计算窗口位置，使其居中    x = (screen_width / 2) - (width / 2)    y = (screen_height / 3) - (height / 2)    root.geometry(f'{width}x{height}+{int(x)}+{int(y)}')    # 用于存储选中的项目    selected_items = []    # 为每个项目创建一个复选框，并使用grid布局管理器    for index, item in enumerate(items):        var = tk.BooleanVar()        chk = tk.Checkbutton(root, text=item, variable=var)        chk.grid(row=index, column=0, sticky='ew')  # 'w'表示靠左对齐 'ew'表示靠左对齐        selected_items.append(var)    # 提交按钮    submit_button = tk.Button(root, text="生成待办事项", command=lambda: generate_todo(selected_items))    submit_button.grid(row=len(items), column=0, sticky='ew')  # 'ew'表示水平填充    root.mainloop()# 生成待办事项def generate_todo(selected_items):    todo_list = []    for var, item in zip(selected_items, items):        if var.get():            todo_list.append(item)    if todo_list:        messagebox.showinfo("待办事项", "\n".join(todo_list))    else:        messagebox.showwarning("注意", "请至少选择一个项目")    print(todo_list)    data_as_list_of_lists = [todo_list]    # 将列表的列表转换为DataFrame    df = pd.DataFrame([item for sublist in data_as_list_of_lists for item in sublist], columns=['待办事项'])    # 指定要保存的Excel文件名    excel_filename = '待办事项.xlsx'    # 将DataFrame导出为Excel文件    df.to_excel(excel_filename, index=False, engine='openpyxl')    print(f'数据已保存至 {excel_filename}')# Excel文件路径excel_file_path = './工作簿.xlsx'# 读取Excel文件中的项目items = read_xlsx(excel_file_path)# 创建GUI窗口create_gui(items)